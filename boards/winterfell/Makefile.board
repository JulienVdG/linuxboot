#
# Specific targets and things for the OCP Winterfell board
#
# This is responsible for extracting the DXE section from the ROM,
# extracting each of the images from it, and setting the sizes for
# the different firmware images.
#
# Replace just the dxe volume:
# ( echo u860000 6a0000 ; pv build/winterfell/dxe.vol ) > /dev/ttyACM0

# 6.9 MB DXE+Linux ROM, uncompressed
dxe-size	:= 0x6A0000
#dxe-compress	:= 0xF00000

dxe-path := $(BUILD)/rom/0x00860000

dxe-files := $(shell awk  \
	'/^[0-9A-Fa-f]/ {print "$(dxe-path)/"$$1".ffs"}' \
	boards/$(BOARD)/image-files.txt \
)


extra-size	:= 0x4E0000

# extra-size - 0x108 (need to be word aligned) decimal for dd
INITRD_SPLIT	:= 5111544

# The Intel firmware has lots of small pieces.
# We replace the DXE recovery image and one of the other
# images with the LinuxBoot one.  Potentially we
# can clean up more space.
FVS := \
$(BUILD)/rom/0x00000000.ifd \
$(BUILD)/0x00010000-cut.bin \
$(BUILD)/extra.vol \
$(BUILD)/nvram1.vol \
$(BUILD)/nvram2.vol \
$(BUILD)/rom/0x00840000.bin \
$(BUILD)/dxe.vol \
$(BUILD)/rom/0x00f00000.fv \


# Replace the DxeCore and SmmCore with our own
# and add in the Linux kernel / initrd
DXE_FFS := \
$(BUILD)/dxe/linuxboot.ffs \
$(BUILD)/Linux.ffs \

$(BUILD)/dxe.vol: \
	$(dxe-files) \
	$(DXE_FFS) \

EXTRA_FFS := \
$(BUILD)/Initrd.ffs \

$(BUILD)/extra.vol: $(EXTRA_FFS)

#
ifdef INITRD_SPLIT
realinitrd := $(INITRD).1
partinitrd := $(INITRD).2

$(realinitrd): $(INITRD)
	dd if=$^ of=$@ bs=1 count=$(INITRD_SPLIT)

$(partinitrd): $(INITRD)
	dd if=$^ of=$@ bs=1 skip=$(INITRD_SPLIT)

$(BUILD)/Initrdpart.ffs: $(partinitrd)

$(BUILD)/dxe.vol: $(BUILD)/Initrdpart.ffs

endif
#
# Compact the NVRAM region.  this isn't required, but makes for cleaner images.
#
nvram1-size := 0x20000
nvram2-size := 0x20000
$(BUILD)/nvram1.vol: $(BUILD)/nvram1.ffs
$(BUILD)/nvram2.vol: $(BUILD)/nvram2.ffs

NVRAM_GUID = cef5b9a3-476d-497f-9fdc-e98143e0422c
NVRAM1_FFS = $(BUILD)/rom/0x00800000/$(NVRAM_GUID).ffs
NVRAM2_FFS = $(BUILD)/rom/0x00820000/$(NVRAM_GUID).ffs
$(NVRAM1_FFS) $(NVRAM2_FFS): $(BUILD)/$(BOARD).txt
	@true

$(BUILD)/nvram1.ffs: $(NVRAM1_FFS)
	./bin/nvram-compact < $< > $@
$(BUILD)/nvram2.ffs: $(NVRAM2_FFS)
	./bin/nvram-compact < $< > $@

# Make sure the firmware is extracted before
$(BUILD)/rom/0x00010000.bin: $(BUILD)/$(BOARD).txt

$(BUILD)/0x00010000-cut.bin: $(BUILD)/rom/0x00010000.bin
	dd if=$< of=$@ bs=4096 count=784

#
# UTK Compact the NVRAM region
#

nvram-nvar-keep := boards/$(BOARD)/nvar-keep.txt

UTK_EXTRA_OPS := invalidate_nvar_except $(nvram-nvar-keep) nvram-compact
